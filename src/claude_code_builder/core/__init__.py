"""Core functionality for Claude Code Builder."""

from claude_code_builder.core.base_model import (
    BaseModel,
    IdentifiedModel,
    MetadataModel,
    NamedModel,
    TimestampedModel,
)
from claude_code_builder.core.config import (
    BuildConfig,
    ContextConfig,
    ExecutorConfig,
    LoggingConfig,
    MCPConfig,
    MCPServerConfig,
    Settings,
    settings,
)
from claude_code_builder.core.enums import (
    AgentType,
    ChunkStrategy,
    Complexity,
    ErrorType,
    LogLevel,
    MCPCheckpoint,
    MCPServer,
    OutputFormat,
    Priority,
    ProjectType,
    RecoveryAction,
    TaskStatus,
    TestType,
)
from claude_code_builder.core.exceptions import (
    APIError,
    ClaudeCodeBuilderError,
    ConfigurationError,
    ContextOverflowError,
    ExecutionTimeoutError,
    FileConflictError,
    MCPServerError,
    PhaseExecutionError,
    RateLimitError,
    ResourceLimitExceeded,
    ResumeError,
    SpecificationError,
    TestFailure,
    ValidationError,
)
from claude_code_builder.core.models import (
    AcceptanceCriteria,
    AcceptanceCriterion,
    APICall,
    BuildMetrics,
    Documentation,
    DocumentationSection,
    ExecutionContext,
    Phase,
    PhaseContext,
    ProcessedSpec,
    ProjectMetadata,
    ProjectState,
    RecoveryResult,
    RecoveryStrategy,
    ResourceUsage,
    ResumePoint,
    ResumeStatus,
    SpecAnalysis,
    SpecChunk,
    Task,
    TaskBreakdown,
    TestResult,
    TestResults,
    TestStep,
)
from claude_code_builder.core.types import (
    Agent,
    AgentID,
    AsyncCallable,
    Config,
    Cost,
    CostBreakdown,
    ErrorHandler,
    JSON,
    JSONArray,
    Logger,
    MCPClient,
    Message,
    PathLike,
    PhaseID,
    ProgressCallback,
    SessionID,
    SpecProcessor,
    TaskID,
    TokenCount,
    TokenUsage,
    ToolCall,
    ToolDefinition,
)

__all__ = [
    # Base models
    "BaseModel",
    "IdentifiedModel",
    "MetadataModel",
    "NamedModel",
    "TimestampedModel",
    # Configuration
    "BuildConfig",
    "ContextConfig",
    "ExecutorConfig",
    "LoggingConfig",
    "MCPConfig",
    "MCPServerConfig",
    "Settings",
    "settings",
    # Enums
    "AgentType",
    "ChunkStrategy",
    "Complexity",
    "ErrorType",
    "LogLevel",
    "MCPCheckpoint",
    "MCPServer",
    "OutputFormat",
    "Priority",
    "ProjectType",
    "RecoveryAction",
    "TaskStatus",
    "TestType",
    # Exceptions
    "APIError",
    "ClaudeCodeBuilderError",
    "ConfigurationError",
    "ContextOverflowError",
    "ExecutionTimeoutError",
    "FileConflictError",
    "MCPServerError",
    "PhaseExecutionError",
    "RateLimitError",
    "ResourceLimitExceeded",
    "ResumeError",
    "SpecificationError",
    "TestFailure",
    "ValidationError",
    # Models
    "AcceptanceCriteria",
    "AcceptanceCriterion",
    "APICall",
    "BuildMetrics",
    "Documentation",
    "DocumentationSection",
    "ExecutionContext",
    "Phase",
    "PhaseContext",
    "ProcessedSpec",
    "ProjectMetadata",
    "ProjectState",
    "RecoveryResult",
    "RecoveryStrategy",
    "ResourceUsage",
    "ResumePoint",
    "ResumeStatus",
    "SpecAnalysis",
    "SpecChunk",
    "Task",
    "TaskBreakdown",
    "TestResult",
    "TestResults",
    "TestStep",
    # Types
    "Agent",
    "AgentID",
    "AsyncCallable",
    "Config",
    "Cost",
    "CostBreakdown",
    "ErrorHandler",
    "JSON",
    "JSONArray",
    "Logger",
    "MCPClient",
    "Message",
    "PathLike",
    "PhaseID",
    "ProgressCallback",
    "SessionID",
    "SpecProcessor",
    "TaskID",
    "TokenCount",
    "TokenUsage",
    "ToolCall",
    "ToolDefinition",
]